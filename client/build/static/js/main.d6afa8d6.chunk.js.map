{"version":3,"sources":["actions/types.js","actions/alert.js","utils/setAuthToken.js","actions/auth.js","components/layout/NavBar.js","components/layout/Landing.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","components/auth/Login.js","components/auth/Register.js","components/layout/Alert.js","actions/profile.js","components/dashboard/spinner.gif","components/dashboard/Spinner.js","components/dashboard/DashBoardActions.js","utils/formatDate.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/DashBoard.js","components/profile-forms/CreateProfile.js","components/profile-forms/AddExperience.js","components/profile-forms/EditProfile.js","components/profile-forms/AddEducation.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","components/routing/PrivateRoute.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/layout/NotFound.js","App.js","index.js"],"names":["SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","GET_PROFILE","GET_PROFILES","GET_REPOS","PROFILE_ERROR","CLEAR_PROFILE","UPDATE_PROFILE","ACCOUNT_DELETED","GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","setAlert","msg","alertType","timeout","dispatch","id","uuidv4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","errors","response","forEach","error","login","email","password","config","body","JSON","stringify","post","connect","state","auth","logout","isAuthenticated","loading","authLinks","to","className","onClick","href","guestLinks","initialState","getItem","user","profile","profiles","repos","posts","combineReducers","alert","action","filter","setItem","removeItem","map","_id","likes","comments","comment","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","propTypes","PropTypes","func","isRequired","bool","useState","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","placeholder","register","password2","alerts","length","getCurrentProfile","statusText","status","createProfile","navigate","edit","Spinner","src","spinner","style","width","margin","display","alt","DashBoardActions","formatDate","date","Intl","DateTimeFormat","format","Date","deleteExperience","delete","experience","experiences","exp","company","title","from","deleteEducation","education","educations","edu","school","degree","deleteAccount","window","confirm","useEffect","useNavigate","website","location","skills","githubusername","bio","twitter","facebook","youtube","linkedin","instagram","displaySocialInputs","toggleSocialInputs","addExperience","put","current","description","disabled","cols","rows","profileData","key","social","Array","isArray","join","addEducation","fieldOfStudy","ProfileItem","avatar","slice","skill","index","getProfiles","PostItem","text","addLike","removeLike","deletePost","showActions","defaultProps","addPost","setText","required","getPosts","addComment","postId","removeComment","commentId","getPost","useParams","Component","component","ProfileTop","rel","ProfileAbout","trim","split","ProfileExperience","ProfileEducation","getGithubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileById","userId","NotFound","App","path","element","DashBoard","CreateProfile","EditProfile","AddExperience","AddEducation","Experience","Education","Posts","Post","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6afa8d6.chunk.js","sourcesContent":["export const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const GET_PROFILES = 'GET_PROFILES';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\r\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\r\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\r\nexport const GET_POSTS = 'GET_POSTS';\r\nexport const POST_ERROR = 'POST_ERROR';\r\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const ADD_POST = 'ADD_POST';\r\nexport const GET_POST = 'GET_POST';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';","import { SET_ALERT, REMOVE_ALERT } from \"./types\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const setAlert = (msg, alertType, timeout=5000) => dispatch => {\r\n    const id = uuidv4();\r\n    dispatch({\r\n        type: SET_ALERT,\r\n        payload: { id, msg, alertType }\r\n    });\r\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id}), timeout);\r\n}","import axios from 'axios';\r\n\r\nconst setAuthToken = (token) => {\r\n    if (token) {\r\n        axios.defaults.headers.common['x-auth-token'] = token;\r\n    } else {\r\n        delete axios.defaults.headers.common['x-auth-token'];\r\n    }\r\n}\r\n\r\nexport default setAuthToken;","import { \r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    CLEAR_PROFILE\r\n} from \"./types\";\r\nimport { setAlert } from './alert';\r\nimport axios from 'axios';\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\n// Load user\r\nexport const loadUser = () => async dispatch => {\r\n    if (localStorage.token) {\r\n        setAuthToken(localStorage.token);\r\n    }\r\n    try {\r\n        const res = await axios.get('/api/auth');\r\n        dispatch({ type: USER_LOADED, payload: res.data});\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if (errors) {\r\n            errors.forEach( error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n        dispatch({\r\n            type: AUTH_ERROR\r\n        })\r\n    }\r\n}\r\n// Register action\r\nexport const register = ({name,email,password}) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json'\r\n            }\r\n        };\r\n\r\n        const body = JSON.stringify({name,email,password});\r\n\r\n        const res = await axios.post('/api/users', body, config);\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(loadUser());\r\n        \r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach( error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: REGISTER_FAIL\r\n        });\r\n    }\r\n}\r\n\r\n// Login action\r\nexport const login = ({email,password}) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json'\r\n            }\r\n        };\r\n\r\n        const body = JSON.stringify({email,password});\r\n\r\n        const res = await axios.post('/api/auth', body, config);\r\n\r\n        dispatch({\r\n            type: REGISTER_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(loadUser());\r\n        \r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach( error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        });\r\n    }\r\n}\r\n\r\n// Logout action to clear out token\r\nexport const logout = () => dispatch => {\r\n    dispatch({ type: LOGOUT });\r\n    dispatch({ type: CLEAR_PROFILE });\r\n}","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst NavBar = ({ auth: {isAuthenticated, loading }, logout }) => {\r\n    const authLinks = (\r\n        <ul>\r\n            <li><Link to=\"/profiles\">Developers</Link></li>\r\n            <li><Link to=\"/posts\">Posts</Link></li>\r\n            <li>\r\n                <Link to=\"/dashboard\">\r\n                    <i className=\"fas fa-user-alt\"></i>{' '}\r\n                    <span className=\"hide-sm\">Dashboard</span>\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <a onClick={logout} href=\"#!\">\r\n                    <i className=\"fas fa-sign-out-alt\"></i>{' '}\r\n                    <span className=\"hide-sm\">Logout</span>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    )\r\n\r\n    const guestLinks = (\r\n        <ul>\r\n            <li><Link to=\"/profiles\">Developers</Link></li>\r\n            <li><Link to=\"/register\">Register</Link></li>\r\n            <li><Link to=\"/login\">Login</Link></li>\r\n        </ul>\r\n    )\r\n    return (\r\n        <nav className=\"navbar bg-dark\">\r\n            <h1>\r\n                <Link to=\"/\">\r\n                    <i className=\"fas fa-code\"></i> DevConnector\r\n                </Link>\r\n            </h1>\r\n            { !loading && (<Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>)}\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavBar.propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\nexport default connect(mapStateToProps, { logout })(NavBar);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst Landing = ({isAuthenticated}) => {\r\n    if (isAuthenticated) {\r\n        return <Navigate to=\"/dashboard\" />\r\n    }\r\n    return (\r\n        <section className=\"landing\">\r\n            <div className=\"dark-overlay\">\r\n                <div className=\"landing-inner\">\r\n                    <h1 className=\"x-large\">Developer Connector</h1>\r\n                    <p className=\"lead\">\r\n                        Create a developer profile/portfolio, share posts and get help from\r\n                        other developers\r\n                    </p>\r\n                    <div className=\"buttons\">\r\n                        <Link to=\"/register\" className=\"btn btn-primary\">Sign Up</Link>\r\n                        <Link to=\"/login\" className=\"btn btn-light\">Login</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nLanding.propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps)(Landing);","import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state=initialState, action){\r\n    const { type, payload } = action;\r\n    switch(type) {\r\n        case SET_ALERT:\r\n            return [\r\n                ...state,\r\n                payload\r\n            ];\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload);\r\n        default:\r\n            return state;\r\n    }\r\n}","import { REGISTER_SUCCESS, REGISTER_FAIL,USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, ACCOUNT_DELETED } from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null\r\n}\r\n\r\nexport default function (state=initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', payload.token);\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated: true,\r\n                loading: false\r\n            };\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload\r\n            };\r\n        case ACCOUNT_DELETED:\r\n        case LOGIN_FAIL:\r\n        case AUTH_ERROR:\r\n        case REGISTER_FAIL:\r\n        case LOGOUT:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import { GET_PROFILE, PROFILE_ERROR, CLEAR_PROFILE, UPDATE_PROFILE, GET_REPOS, GET_PROFILES } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    profiles: [],\r\n    repos: [],\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\nexport default function(state=initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case UPDATE_PROFILE:\r\n        case GET_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n                loading: false,\r\n            }\r\n        case GET_PROFILES:\r\n            return {\r\n                ...state,\r\n                profiles: payload,\r\n                loading: false\r\n            }\r\n        case PROFILE_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            }\r\n        case GET_REPOS:\r\n            return {\r\n                ...state,\r\n                repos: payload,\r\n                loading: false\r\n            }\r\n        case CLEAR_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: null,\r\n                repos: [],\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { \r\n    DELETE_POST,\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    ADD_POST,\r\n    GET_POST,\r\n    ADD_COMMENT,\r\n    REMOVE_COMMENT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    post: null,\r\n    posts: [],\r\n    error: {},\r\n    loading: true\r\n};\r\n\r\nexport default function(state=initialState, action) {\r\n    const { type, payload } = action;\r\n    switch(type) {\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: payload,\r\n                loading: false\r\n            };\r\n        case GET_POST:\r\n            return {\r\n                ...state,\r\n                post: payload,\r\n                loading: false\r\n            };\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [payload, ...state.posts],\r\n                loading: false\r\n            };\r\n        case UPDATE_LIKES:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map(post => post._id === payload.id ? {...post, likes: payload.likes } : post),\r\n                loading: false\r\n            };\r\n        case ADD_COMMENT:\r\n            return {\r\n                ...state,\r\n                post: {\r\n                    ...state.post,\r\n                    comments: payload\r\n                },\r\n                loading: false\r\n            };\r\n        case REMOVE_COMMENT:\r\n            return {\r\n                ...state,\r\n                post: {\r\n                    ...state.post,\r\n                    comments: state.post.comments.filter(comment => comment._id !== payload)\r\n                },\r\n                loading: false\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post._id !== payload),\r\n                loading: false\r\n            };\r\n        case POST_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport alert from './alert';\r\nimport auth from './auth';\r\nimport profile from './profile';\r\nimport post from './post';\r\n\r\nexport default combineReducers({\r\n    alert,\r\n    auth,\r\n    profile,\r\n    post\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;","import React, { Fragment, useState } from 'react';\r\nimport { login } from '../../actions/auth';\r\nimport { Link, Navigate } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        email:'',\r\n        password:''\r\n    })\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]:e.target.value});\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        login({email,password});\r\n    }\r\n\r\n    if (isAuthenticated) {\r\n        return <Navigate to=\"/dashboard\" />\r\n    }\r\n\r\n    return (\r\n        <section className=\"container\">\r\n            <h1 className=\"large text-primary\">Sign In</h1>\r\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Sign into Your Account</p>\r\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                <input\r\n                    type=\"email\"\r\n                    placeholder=\"Email Address\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={e => onChange(e)}\r\n                />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={e => onChange(e)}\r\n                />\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\r\n            </form>\r\n            <p className=\"my-1\">\r\n                Don't have an account? <Link to=\"/register\">Sign Up</Link>\r\n            </p>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\nlogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    setAlert: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n}\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import React, { Fragment, useState } from 'react';\r\nimport { Link, Navigate } from 'react-router-dom';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        name:'',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    })\r\n\r\n    const { name, email, password, password2 } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (password !== password2) {\r\n            setAlert('Passwords do not match','danger', 3000);\r\n        } else {\r\n            register({name,email,password});\r\n        }\r\n    }\r\n    \r\n    if (isAuthenticated) {\r\n        return <Navigate to=\"/dashboard\" />\r\n    }\r\n    \r\n    return (\r\n        <section className=\"container\">\r\n            <h1 className=\"large text-primary\">Sign Up</h1>\r\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\r\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                <input type=\"text\" placeholder=\"Name\" name=\"name\" value={name} onChange={e => onChange(e)} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input type=\"email\" placeholder=\"Email Address\" name=\"email\" value={email} onChange={e => onChange(e)} />\r\n                <small className=\"form-text\"\r\n                    >This site uses Gravatar so if you want a profile image, use a\r\n                    Gravatar email</small\r\n                >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={e => onChange(e)}\r\n                />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"password2\"\r\n                    value={password2}\r\n                    onChange={e => onChange(e)}\r\n                />\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n            </form>\r\n            <p className=\"my-1\">\r\n                Already have an account? <Link to=\"/login\">Sign In</Link>\r\n            </p>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nRegister.propTypes = {\r\n    setAlert: PropTypes.func.isRequired,\r\n    register: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n}\r\n\r\nexport default connect(mapStateToProps, { setAlert, register })(Register);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Alert = ({ alerts }) => alerts !== null && alerts.length > 0 && alerts.map( alert => (\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n        {alert.msg}\r\n    </div>\r\n))\r\n\r\n\r\nAlert.propTypes = {\r\n    alerts: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    alerts: state.alert\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Alert);","import { ACCOUNT_DELETED, CLEAR_PROFILE, GET_PROFILE, GET_PROFILES, GET_REPOS, PROFILE_ERROR, UPDATE_PROFILE } from \"./types\";\r\nimport { setAlert } from './alert';\r\nimport axios from 'axios';\r\n\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/profile/me');\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProfile = (formData, navigate, edit=false) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json'\r\n            }\r\n        };\r\n        const res = await axios.post('/api/profile', formData, config);\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created','success'));\r\n        if (!edit) {\r\n            navigate('/dashboard')\r\n        }\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if (errors) {\r\n            errors.forEach( error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n}\r\n\r\nexport const addExperience = (formData, navigate) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json'\r\n            }\r\n        };\r\n\r\n        const res = await axios.put('/api/profile/experience', formData, config);\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        })\r\n        dispatch(setAlert('Experience Added', 'success'));\r\n        navigate('/dashboard');\r\n    } catch(err) {\r\n        const errors = err.response.data.errors;\r\n        if (errors) {\r\n            errors.forEach( error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg:err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\nexport const addEducation = (formData, navigate) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json'\r\n            }\r\n        };\r\n\r\n        const res = await axios.put('/api/profile/education', formData, config);\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        })\r\n        dispatch(setAlert('Education Added', 'success'));\r\n        navigate('/dashboard');\r\n    } catch(err) {\r\n        const errors = err.response.data.errors;\r\n        if (errors) {\r\n            errors.forEach( error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg:err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\nexport const deleteEducation = (id) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/education/${id}`)\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        })\r\n        dispatch(setAlert('Education removed','success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteExperience = (id) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/experience/${id}`)\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        })\r\n        dispatch(setAlert('Experience removed','success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            error: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n};\r\n\r\nexport const deleteAccount = () => async (dispatch) => {\r\n    if(window.confirm('Are you sure you want to delete your account? This is irreversable.')) {\r\n        try {\r\n            await axios.delete('/api/profile');\r\n            dispatch({ type: CLEAR_PROFILE });\r\n            dispatch({ type: ACCOUNT_DELETED });\r\n            dispatch(setAlert('Account Deleted'))\r\n        } catch (err) {\r\n            dispatch({\r\n                type: PROFILE_ERROR,\r\n                error: { msg: err.response.statusText, status: err.response.status }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getProfiles = () => async dispatch => {\r\n    dispatch({ type: CLEAR_PROFILE });\r\n    try {\r\n        const res = await axios.get('/api/profile');\r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n}\r\n\r\nexport const  getProfileById = userId => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/profile/user/${userId}`);\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n}\r\n\r\nexport const getGithubRepos = username => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/profile/github/${username}`);\r\n        dispatch({\r\n            type: GET_REPOS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/spinner.ca55bda3.gif\";","import React from 'react';\r\nimport spinner from './spinner.gif'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <img src={spinner} style={{ width: '200px', margin: 'auto', display: 'block'}} alt=\"loading...\" />\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DashBoardActions = () => {\r\n    return (\r\n        <div className=\"dash-buttons\">\r\n            <Link to=\"/edit-profile\" className=\"btn btn-light\">\r\n            <i className=\"fas fa-user-circle text-primary\"></i> Edit Profile\r\n            </Link>\r\n            <Link to=\"/add-experience\" className=\"btn btn-light\">\r\n            <i className=\"fab fa-black-tie text-primary\"></i> Add Experience\r\n            </Link>\r\n            <Link to=\"/add-education\" className=\"btn btn-light\">\r\n            <i className=\"fas fa-graduation-cap text-primary\"></i> Add Education\r\n            </Link>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default DashBoardActions;","function formatDate(date) {\r\n    return new Intl.DateTimeFormat().format(new Date(date));\r\n  }\r\n  \r\n  export default formatDate;","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport formatDate from '../../utils/formatDate';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteExperience } from '../../actions/profile';\r\n\r\nconst Experience = ({ experience, deleteExperience }) => {\r\n    const experiences = experience.map( exp => (\r\n        <tr key={exp._id}>\r\n            <td>{exp.company}</td>\r\n            <td className=\"hide-sm\">{exp.title}</td>\r\n            <td>{formatDate(exp.from)} -{' '}\r\n            {exp.to === null ? (' Now'): formatDate(exp.to)}\r\n            </td>\r\n            <td>\r\n                <button className=\"btn btn-danger\" onClick={() => deleteExperience(exp._id)}>delete</button>\r\n            </td>\r\n        </tr>\r\n    ))\r\n    return (\r\n        <Fragment>\r\n            <h2 className=\"my-2\">Experience Credentials</h2>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Company</th>\r\n                        <th>Title</th>\r\n                        <th>Years</th>\r\n                        <th />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {experiences}\r\n                </tbody>\r\n            </table>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nExperience.propTypes = {\r\n    experience: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteExperience })(Experience);","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteEducation } from '../../actions/profile';\r\nimport formatDate from '../../utils/formatDate';\r\n\r\nconst Education = ({ education , deleteEducation }) => {\r\n    const educations = education.map( edu => (\r\n        <tr key={edu._id}>\r\n            <td>{edu.school}</td>\r\n            <td className=\"hide-sm\">{edu.degree}</td>\r\n            <td>{formatDate(edu.from)} -{' '}\r\n            {edu.to === null ? (' Now'): formatDate(edu.to)}\r\n            </td>\r\n            <td>\r\n                <button className=\"btn btn-danger\" onClick={() => deleteEducation(edu._id)}>delete</button>\r\n            </td>\r\n        </tr>\r\n    ))\r\n    return (\r\n        <Fragment>\r\n            <h2 className=\"my-2\">Education Credentials</h2>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>School</th>\r\n                        <th>Degree</th>\r\n                        <th>Years</th>\r\n                        <th />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {educations}\r\n                </tbody>\r\n            </table>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nEducation.propTypes = {\r\n    education: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteEducation })(Education);","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getCurrentProfile } from '../../actions/profile'\r\nimport { connect } from 'react-redux';\r\nimport Spinner from './Spinner';\r\nimport { Link } from 'react-router-dom';\r\nimport DashBoardActions from './DashBoardActions';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\nimport { deleteAccount } from '../../actions/profile';\r\n\r\nconst DashBoard = ({ getCurrentProfile, deleteAccount, profile: {profile, loading}, auth: {user} }) => {\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n    }, [getCurrentProfile])\r\n    return loading && profile === null ? (<Spinner />) : (<section className=\"container\">\r\n        <h1 className=\"large text-primary\">Dashboard</h1>\r\n        <p className=\"lead\">\r\n            <i className=\"fas fa-user\"></i>Welcome {user && user.name}\r\n        </p>\r\n        {profile !== null ? (<Fragment>\r\n            <DashBoardActions />\r\n            <Experience experience={profile.experiences} />\r\n            <Education education={profile.education} />\r\n            <div className=\"my-2\">\r\n                <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\r\n                    <i className=\"fas fa-user-minus\"></i>{' '}\r\n                    Delete My Account\r\n                </button>\r\n            </div>\r\n        </Fragment>) : (<Fragment>\r\n            <p>You have not yet setup a profile, please add some info</p>\r\n            <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">Create Profile</Link>\r\n\r\n        </Fragment>)}\r\n    </section>)\r\n}\r\n\r\nDashBoard.propTypes = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(DashBoard);","import React, { Fragment, useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { createProfile } from '../../actions/profile';\r\nimport { connect } from 'react-redux';\r\n\r\nconst CreateProfile = ({ createProfile }) => {\r\n    const navigate = useNavigate();\r\n    const [ formData, setFormData ] = useState({\r\n        status: '',\r\n        company: '',\r\n        website: '',\r\n        location: '',\r\n        skills: '',\r\n        githubusername: '',\r\n        bio: '',\r\n        twitter: '',\r\n        facebook: '',\r\n        youtube: '',\r\n        linkedin: '',\r\n        instagram: ''\r\n    })\r\n\r\n    const [ displaySocialInputs, toggleSocialInputs ] = useState(false);\r\n\r\n    const {\r\n        status,\r\n        company,\r\n        website,\r\n        location,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        youtube,\r\n        linkedin,\r\n        instagram\r\n    } = formData;\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]:e.target.value});\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        createProfile(formData, navigate);\r\n    }\r\n    return (\r\n        <section className=\"container\">\r\n            <h1 className=\"large text-primary\">\r\n                Create Your Profile\r\n            </h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n                profile stand out\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                <select name=\"status\" value={status} onChange={(e) => onChange(e)}>\r\n                    <option value=\"0\">* Select Professional Status</option>\r\n                    <option value=\"Developer\">Developer</option>\r\n                    <option value=\"Junior Developer\">Junior Developer</option>\r\n                    <option value=\"Senior Developer\">Senior Developer</option>\r\n                    <option value=\"Manager\">Manager</option>\r\n                    <option value=\"Student or Learning\">Student or Learning</option>\r\n                    <option value=\"Instructor\">Instructor or Teacher</option>\r\n                    <option value=\"Intern\">Intern</option>\r\n                    <option value=\"Other\">Other</option>\r\n                </select>\r\n                <small className=\"form-text\"\r\n                    >Give us an idea of where you are at in your career</small\r\n                >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={(e) => onChange(e)}/>\r\n                <small className=\"form-text\"\r\n                    >Could be your own company or one you work for</small\r\n                >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={(e) => onChange(e)} />\r\n                <small className=\"form-text\"\r\n                    >Could be your own or a company website</small\r\n                >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={(e) => onChange(e)} />\r\n                <small className=\"form-text\"\r\n                    >City & state suggested (eg. Boston, MA)</small\r\n                >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={(e) => onChange(e)}/>\r\n                <small className=\"form-text\"\r\n                    >Please use comma separated values (eg.\r\n                    HTML,CSS,JavaScript,PHP)</small\r\n                >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Github Username\"\r\n                    name=\"githubusername\"\r\n                    value={githubusername}\r\n                    onChange={(e) => onChange(e)}\r\n                />\r\n                <small className=\"form-text\"\r\n                    >If you want your latest repos and a Github link, include your\r\n                    username</small\r\n                >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={(e) => onChange(e)}></textarea>\r\n                <small className=\"form-text\">Tell us a little about yourself</small>\r\n                </div>\r\n\r\n                <div className=\"my-2\">\r\n                <button type=\"button\" className=\"btn btn-light\" onClick={() => toggleSocialInputs(!displaySocialInputs)}>\r\n                    Add Social Network Links\r\n                </button>\r\n                <span>Optional</span>\r\n                </div>\r\n\r\n                {displaySocialInputs && (\r\n                    <Fragment>\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-twitter fa-2x\"></i>\r\n                            <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={(e) => onChange(e)} />\r\n                        </div>\r\n        \r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-facebook fa-2x\"></i>\r\n                            <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={(e) => onChange(e)} />\r\n                        </div>\r\n        \r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-youtube fa-2x\"></i>\r\n                            <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={(e) => onChange(e)} />\r\n                        </div>\r\n        \r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-linkedin fa-2x\"></i>\r\n                            <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={(e) => onChange(e)} />\r\n                        </div>\r\n        \r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-instagram fa-2x\"></i>\r\n                            <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={(e) => onChange(e)} />\r\n                        </div>\r\n                    </Fragment>\r\n                )}\r\n                \r\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                <Link to=\"/dashboard\" className=\"btn btn-light my-1\">Go Back</Link>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default connect(null, { createProfile })(CreateProfile);","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { addExperience } from '../../actions/profile';\r\nimport { connect } from 'react-redux';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nconst AddExperience = ({ addExperience }) => {\r\n    const navigate = useNavigate();\r\n    const [formData, setFormData] = useState({\r\n        title:'',\r\n        company: '',\r\n        location: '',\r\n        from: '',\r\n        current: false,\r\n        to: '',\r\n        description: ''\r\n    });\r\n\r\n    const {\r\n        title,\r\n        company,\r\n        location,\r\n        from,\r\n        current,\r\n        to,\r\n        description\r\n    } = formData;\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\r\n    return (\r\n        <section className=\"container\">\r\n        <h1 className=\"large text-primary\">\r\n        Add An Experience\r\n        </h1>\r\n        <p className=\"lead\">\r\n            <i className=\"fas fa-code-branch\"></i> Add any developer/programming\r\n            positions that you have had in the past\r\n        </p>\r\n        <small>* = required field</small>\r\n        <form className=\"form\" onSubmit={(e) => {\r\n            e.preventDefault();\r\n            addExperience(formData, navigate);\r\n        }}>\r\n            <div className=\"form-group\">\r\n            <input type=\"text\" placeholder=\"* Job Title\" name=\"title\" value={title} onChange={(e) => onChange(e)} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n            <input type=\"text\" placeholder=\"* Company\" name=\"company\" value={company} onChange={(e) => onChange(e)} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n            <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={(e) => onChange(e)} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n            <h4>From Date</h4>\r\n            <input type=\"date\" name=\"from\" value={from} onChange={(e) => onChange(e)} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n            <p><input type=\"checkbox\" name=\"current\" value={current} onChange={() => {\r\n                setFormData({ ...formData, current: !current });\r\n            }} /> Current Job</p>\r\n            </div>\r\n            <div className=\"form-group\">\r\n            <h4>To Date</h4>\r\n            <input type=\"date\" name=\"to\" value={to} disabled={current} onChange={(e) => onChange(e)} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n            <textarea\r\n                name=\"description\"\r\n                cols=\"30\"\r\n                rows=\"5\"\r\n                placeholder=\"Job Description\"\r\n                value={description}\r\n                onChange={(e) => onChange(e)}\r\n            ></textarea>\r\n            </div>\r\n            <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n            <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n                Go Back\r\n            </Link>\r\n        </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nAddExperience.propTypes = {\r\n    addExperience: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { addExperience })(AddExperience);","import React, { Fragment, useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\nimport { connect } from 'react-redux';\r\n\r\n/*\r\n  NOTE: declare initialState outside of component\r\n  so that it doesn't trigger a useEffect\r\n  we can then safely use this to construct our profileData\r\n */\r\n  const initialState = {\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: ''\r\n  };\r\n\r\nconst EditProfile = ({ profile: {profile, loading}, createProfile, getCurrentProfile }) => {\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        // if there is no profile, attempt to fetch one\r\n        if (!profile) getCurrentProfile();\r\n    \r\n        // if we finished loading and we do have a profile\r\n        // then build our profileData\r\n        if (!loading && profile) {\r\n          const profileData = { ...initialState };\r\n          for (const key in profile) {\r\n            if (key in profileData) profileData[key] = profile[key];\r\n          }\r\n          for (const key in profile.social) {\r\n            if (key in profileData) profileData[key] = profile.social[key];\r\n          }\r\n          // the skills may be an array from our API response\r\n          if (Array.isArray(profileData.skills))\r\n            profileData.skills = profileData.skills.join(', ');\r\n          // set local state with the profileData\r\n          setFormData(profileData);\r\n        }\r\n      }, [loading, getCurrentProfile, profile]);\r\n\r\n    const [ formData, setFormData ] = useState({\r\n        status: '',\r\n        company: '',\r\n        website: '',\r\n        location: '',\r\n        skills: '',\r\n        githubusername: '',\r\n        bio: '',\r\n        twitter: '',\r\n        facebook: '',\r\n        youtube: '',\r\n        linkedin: '',\r\n        instagram: ''\r\n    })\r\n\r\n    const [ displaySocialInputs, toggleSocialInputs ] = useState(false);\r\n\r\n    const {\r\n        status,\r\n        company,\r\n        website,\r\n        location,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        youtube,\r\n        linkedin,\r\n        instagram\r\n    } = formData;\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]:e.target.value});\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        createProfile(formData, navigate, true);\r\n    }\r\n    return (\r\n        <section className=\"container\">\r\n            <h1 className=\"large text-primary\">\r\n                Create Your Profile\r\n            </h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n                profile stand out\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                <select name=\"status\" value={status} onChange={(e) => onChange(e)}>\r\n                    <option value=\"0\">* Select Professional Status</option>\r\n                    <option value=\"Developer\">Developer</option>\r\n                    <option value=\"Junior Developer\">Junior Developer</option>\r\n                    <option value=\"Senior Developer\">Senior Developer</option>\r\n                    <option value=\"Manager\">Manager</option>\r\n                    <option value=\"Student or Learning\">Student or Learning</option>\r\n                    <option value=\"Instructor\">Instructor or Teacher</option>\r\n                    <option value=\"Intern\">Intern</option>\r\n                    <option value=\"Other\">Other</option>\r\n                </select>\r\n                <small className=\"form-text\"\r\n                    >Give us an idea of where you are at in your career</small\r\n                >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={(e) => onChange(e)}/>\r\n                <small className=\"form-text\"\r\n                    >Could be your own company or one you work for</small\r\n                >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={(e) => onChange(e)} />\r\n                <small className=\"form-text\"\r\n                    >Could be your own or a company website</small\r\n                >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={(e) => onChange(e)} />\r\n                <small className=\"form-text\">City & state suggested (eg. Boston, MA)</small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={(e) => onChange(e)}/>\r\n                <small className=\"form-text\"\r\n                    >Please use comma separated values (eg.\r\n                    HTML,CSS,JavaScript,PHP)</small\r\n                >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Github Username\"\r\n                    name=\"githubusername\"\r\n                    value={githubusername}\r\n                    onChange={(e) => onChange(e)}\r\n                />\r\n                <small className=\"form-text\"\r\n                    >If you want your latest repos and a Github link, include your\r\n                    username</small\r\n                >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={(e) => onChange(e)}></textarea>\r\n                <small className=\"form-text\">Tell us a little about yourself</small>\r\n                </div>\r\n\r\n                <div className=\"my-2\">\r\n                <button type=\"button\" className=\"btn btn-light\" onClick={() => toggleSocialInputs(!displaySocialInputs)}>\r\n                    Add Social Network Links\r\n                </button>\r\n                <span>Optional</span>\r\n                </div>\r\n\r\n                {displaySocialInputs && (\r\n                    <Fragment>\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-twitter fa-2x\"></i>\r\n                            <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={(e) => onChange(e)} />\r\n                        </div>\r\n        \r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-facebook fa-2x\"></i>\r\n                            <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={(e) => onChange(e)} />\r\n                        </div>\r\n        \r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-youtube fa-2x\"></i>\r\n                            <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={(e) => onChange(e)} />\r\n                        </div>\r\n        \r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-linkedin fa-2x\"></i>\r\n                            <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={(e) => onChange(e)} />\r\n                        </div>\r\n        \r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-instagram fa-2x\"></i>\r\n                            <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={(e) => onChange(e)} />\r\n                        </div>\r\n                    </Fragment>\r\n                )}\r\n                \r\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                <Link to=\"/dashboard\" className=\"btn btn-light my-1\">Go Back</Link>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nEditProfile.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n    createProfile: PropTypes.func.isRequired,\r\n    getCurrentProfile: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(EditProfile);","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { addEducation } from '../../actions/profile';\r\nimport { connect } from 'react-redux';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nconst AddEducation = ({ addEducation }) => {\r\n    const navigate = useNavigate();\r\n    const [formData, setFormData] = useState({\r\n        degree:'',\r\n        school: '',\r\n        fieldOfStudy: '',\r\n        from: '',\r\n        current: false,\r\n        to: '',\r\n        description: ''\r\n    });\r\n\r\n    const {\r\n        degree,\r\n        school,\r\n        fieldOfStudy,\r\n        from,\r\n        current,\r\n        to,\r\n        description\r\n    } = formData;\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\r\n    return (\r\n        <section className=\"container\">\r\n        <h1 className=\"large text-primary\">\r\n        Add Education\r\n        </h1>\r\n        <p className=\"lead\">\r\n            <i className=\"fas fa-code-branch\"></i> Add any school or bootcamp that you have attended\r\n        </p>\r\n        <small>* = required field</small>\r\n        <form className=\"form\" onSubmit={(e) => {\r\n            e.preventDefault();\r\n            addEducation(formData, navigate);\r\n        }}>\r\n            <div className=\"form-group\">\r\n            <input type=\"text\" placeholder=\"* Degree\" name=\"degree\" value={degree} onChange={(e) => onChange(e)} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n            <input type=\"text\" placeholder=\"* School\" name=\"school\" value={school} onChange={(e) => onChange(e)} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n            <input type=\"text\" placeholder=\"Field Of Study\" name=\"fieldOfStudy\" value={fieldOfStudy} onChange={(e) => onChange(e)} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n            <h4>From Date</h4>\r\n            <input type=\"date\" name=\"from\" value={from} onChange={(e) => onChange(e)} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n            <p><input type=\"checkbox\" name=\"current\" value={current} onChange={() => {\r\n                setFormData({ current: !current });\r\n            }} /> Current Degree</p>\r\n            </div>\r\n            <div className=\"form-group\">\r\n            <h4>To Date</h4>\r\n            <input type=\"date\" name=\"to\" value={to} disabled={current} onChange={(e) => onChange(e)} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n            <textarea\r\n                name=\"description\"\r\n                cols=\"30\"\r\n                rows=\"5\"\r\n                placeholder=\"Job Description\"\r\n                value={description}\r\n                onChange={(e) => onChange(e)}\r\n            ></textarea>\r\n            </div>\r\n            <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n            <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\r\n        </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nAddEducation.propTypes = {\r\n    addEducation: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { addEducation })(AddEducation);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileItem = ({ profile: {\r\n    user: { _id, name, avatar },\r\n    status,\r\n    company,\r\n    location,\r\n    skills\r\n}}) => {\r\n    return (\r\n        <div className=\"profile bg-light\">\r\n            <img src={avatar} alt=\"\" className=\"round-img\" />\r\n            <div>\r\n                <p>{name}</p>\r\n                <p>{status} {company && <span>at {company}</span>}</p>\r\n                <p>{location && <span>{location}</span>}</p>\r\n                <Link to={`/profile/${_id}`} className=\"btn btn-primary\">View Profile</Link>\r\n                <ul>\r\n                    {skills.slice(0, 4).map((skill, index) => (\r\n                        <li key={index}>\r\n                            <i className=\"fas fa-check\"></i> {skill}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileItem.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default ProfileItem\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getProfiles } from '../../actions/profile';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../dashboard/Spinner';\r\nimport ProfileItem from './ProfileItem';\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n    useEffect(() => {\r\n        getProfiles();\r\n    }, [getProfiles])\r\n    return (\r\n        <section className=\"container\">{loading ? <Spinner /> : <Fragment>\r\n            <h1 className=\"large text-primary\">Developers</h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fab fa-connectdevelop\"></i> Browse and connect with developers\r\n            </p>\r\n            <div className=\"profiles\">\r\n                {profiles.length > 0 ? (\r\n                    profiles.map( profile => (\r\n                        <ProfileItem key={profile._id} profile={profile} />\r\n                    ))\r\n                ): <h4>No profiles found...</h4>}\r\n            </div>\r\n            </Fragment>}\r\n        </section>\r\n    )\r\n}\r\n\r\nProfiles.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport formatDate from '../../utils/formatDate';\r\nimport { Link } from 'react-router-dom';\r\nimport { addLike, removeLike, deletePost } from '../../actions/post';\r\n\r\nconst PostItem = ({post: {_id, user, name, avatar, text, likes, comments, date }, auth, addLike, removeLike, deletePost, showActions }) => {\r\n    return (\r\n        <div className=\"post bg-white p-1 my-1\">\r\n          <div>\r\n          <Link to={`/profile/${user}`}>\r\n            <img className=\"round-img\" src={avatar} alt=\"\" />\r\n            <h4>{name}</h4>\r\n          </Link>\r\n          </div>\r\n          <div>\r\n            <p className=\"my-1\">\r\n              {text && (<span>{text}</span>)}\r\n            </p>\r\n             <p className=\"post-date\">\r\n                {formatDate(date)}\r\n            </p>\r\n\r\n            {showActions && (<Fragment>\r\n              <button onClick={e => addLike(_id)} type=\"button\" className=\"btn btn-light\">\r\n              <i className=\"fas fa-thumbs-up\"></i>\r\n                {likes.length > 0 && (<span>{' '}{likes.length}</span>)}\r\n              </button>\r\n              <button onClick={e => removeLike(_id)} type=\"button\" className=\"btn btn-light\">\r\n                <i className=\"fas fa-thumbs-down\"></i>\r\n              </button>\r\n              <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\r\n                Discussion {comments.length > 0 && (<span className='comment-count'>{comments.length}</span>)}\r\n              </Link>\r\n              {!auth.loading && auth.user._id === user && (\r\n                <button onClick={e => deletePost(_id)} type=\"button\" className=\"btn btn-danger\">\r\n                  <i className=\"fas fa-times\"></i>\r\n                </button>\r\n            )}\r\n            </Fragment>)}\r\n            \r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true\r\n}\r\n\r\nPostItem.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    addLike: PropTypes.func.isRequired,\r\n    removeLike: PropTypes.func.isRequired,\r\n    deletePost: PropTypes.func.isRequired,\r\n    showActions: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(PostItem);\r\n","import {\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    PROFILE_ERROR,\r\n    GET_POST,\r\n    ADD_COMMENT,\r\n    REMOVE_COMMENT\r\n} from './types';\r\nimport axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\n// Get posts\r\nexport const getPosts = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/posts');\r\n        dispatch({\r\n            type: GET_POSTS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// Like post/add like\r\nexport const addLike = id => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`/api/posts/like/${id}`);\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            payload: { id, likes: res.data }\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n}\r\n\r\n// Unlike post/ remove like\r\nexport const removeLike = id => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`/api/posts/unlike/${id}`);\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            payload: { id, likes: res.data }\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n}\r\n\r\n// Delete post\r\nexport const deletePost = id => async dispatch => {\r\n    try {\r\n        await axios.delete(`/api/posts/${id}`);\r\n        dispatch({\r\n            type: DELETE_POST,\r\n            payload: id\r\n        });\r\n        dispatch(setAlert('Post removed','success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// Add post\r\nexport const addPost = formData => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify(formData)\r\n\r\n    try {\r\n        const res = await axios.post('/api/posts', body, config);\r\n\r\n        dispatch({\r\n            type: ADD_POST,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Post created','success'));\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// Get Post\r\nexport const getPost = id => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/posts/${id}`);\r\n        dispatch({\r\n            type: GET_POST,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// Add comment\r\nexport const addComment = ( postId, formData ) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n    try {\r\n        const res = await axios.post(`/api/posts/comments/${postId}`, formData, config);\r\n        dispatch({\r\n            type: ADD_COMMENT,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert('Comment Added','success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// Delete/Remove comment\r\nexport const removeComment = (postId, commentId) => async dispatch => {\r\n    try {\r\n        await axios.delete(`/api/posts/comments/${postId}/${commentId}`);\r\n        dispatch({\r\n            type: REMOVE_COMMENT,\r\n            payload: commentId\r\n        });\r\n        dispatch(setAlert('Comment deleted','success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        }); \r\n    }\r\n}","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addPost } from '../../actions/post';\r\n\r\nconst PostForm = ({ addPost }) => {\r\n    const [ text, setText ] = useState('');\r\n    return (\r\n        <div className=\"post-form\">\r\n        <div className=\"bg-primary p\">\r\n          <h3>Say Something...</h3>\r\n        </div>\r\n        <form className=\"form my-1\" onSubmit={e => {\r\n            e.preventDefault();\r\n            addPost({ text });\r\n            setText('');\r\n        }}>\r\n          <textarea\r\n            name=\"text\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Create a post\"\r\n            required\r\n            value={text}\r\n            onChange={e => setText(e.target.value)}\r\n          ></textarea>\r\n          <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\" />\r\n        </form>\r\n      </div>\r\n    )\r\n}\r\n\r\nPostForm.propTypes = {\r\n    addPost: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { addPost })(PostForm);","import React, { useEffect, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getPosts } from '../../actions/post';\r\nimport Spinner from '../dashboard/Spinner';\r\nimport PostItem from './PostItem';\r\nimport PostForm from './PostForm';\r\n\r\nconst Posts = ({ post: { posts, loading }, getPosts}) => {\r\n    useEffect(() => {\r\n        getPosts();\r\n    }, [getPosts]);\r\n    return loading ? <Spinner /> : (<section className=\"container\">\r\n        <h1 className=\"large text-primary\">\r\n            Posts\r\n        </h1>\r\n        <p className=\"lead\"><i className=\"fas fa-user\"></i> Welcome to the community!</p>\r\n        <PostForm />\r\n        <div className='posts'>\r\n            {posts.map(post => (\r\n                <PostItem key={post._id} post={post} />\r\n            ))}\r\n        </div>\r\n\r\n    </section>);\r\n}\r\n\r\nPosts.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n    getPosts: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    post: state.post\r\n})\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Posts);","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { addComment } from '../../actions/post';\r\nimport { connect } from 'react-redux';\r\n\r\nconst CommentForm = ({ postId, addComment }) => {\r\n    const [ text, setText ] = useState('');\r\n    return (\r\n        <div className=\"post-form\">\r\n            <div className=\"bg-primary p\">\r\n            <h3>Leave A Comment</h3>\r\n            </div>\r\n            <form onSubmit={e => {\r\n                e.preventDefault();\r\n                addComment(postId, {text});\r\n                setText('');\r\n            }} className=\"form my-1\">\r\n            <textarea\r\n                className=\"text\"\r\n                cols=\"30\"\r\n                rows=\"5\"\r\n                placeholder=\"Comment on this post\"\r\n                required\r\n                onChange={e => setText(e.target.value)}\r\n            ></textarea>\r\n            <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nCommentForm.propTypes = {\r\n    addComment: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addComment })(CommentForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { removeComment } from '../../actions/post';\r\nimport { connect } from 'react-redux';\r\nimport formatDate from '../../utils/formatDate';\r\n\r\nconst CommentItem = ({ comment: { _id, user, text, avatar, name, date }, postId, auth, removeComment }) => {\r\n    return (\r\n        <div className=\"post bg-white p-1 my-1\">\r\n          <div>\r\n            <a href=\"profile.html\">\r\n              <img\r\n                className=\"round-img\"\r\n                src={avatar}\r\n                alt=\"\"\r\n              />\r\n              <h4>{name}</h4>\r\n            </a>\r\n          </div>\r\n          <div>\r\n            <p className=\"my-1\">\r\n              {text}\r\n            </p>\r\n             <p className=\"post-date\">\r\n                Posted on {formatDate(date)}\r\n            </p>\r\n            {!auth.loading && auth.user._id === user && (\r\n                <button className='btn btn-danger' onClick={e => removeComment(postId, _id)}>\r\n                    <i className='fas fa-times'></i>\r\n                </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nCommentItem.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    comment: PropTypes.object.isRequired,\r\n    postId: PropTypes.string.isRequired,\r\n    removeComment: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { removeComment })(CommentItem);","import React, { Fragment, useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getPost } from '../../actions/post';\r\nimport Spinner from '../dashboard/Spinner';\r\nimport PostItem from '../posts/PostItem';\r\nimport CommentForm from './CommentForm';\r\nimport CommentItem from './CommentItem';\r\n\r\nconst Post = ({ post: { post, loading }, getPost }) => {\r\n    const { id } = useParams();\r\n    useEffect(() => {\r\n        getPost(id);\r\n    }, [getPost, id]);\r\n    return loading || post === null ? <Spinner /> : <section className=\"container\">\r\n        <Link to='/posts' className='btn'>Back To Posts</Link>\r\n        <PostItem post={post} showActions={false} />\r\n        <CommentForm postId={post._id} />\r\n        <div className='comments'>\r\n            {post.comments.map(comment => (\r\n                <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n            ))}\r\n        </div>\r\n    </section>\r\n}\r\n\r\nPost.propTypes = {\r\n  getPost: PropTypes.func.isRequired  \r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    post: state.post,\r\n    auth: state.auth\r\n})\r\nexport default connect(mapStateToProps, { getPost })(Post);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../dashboard/Spinner'\r\n\r\nconst PrivateRoute = ({\r\n    component: Component,\r\n    auth: { isAuthenticated, loading }\r\n  }) => {\r\n    if (loading) return <Spinner />;\r\n    if (isAuthenticated) return <Component />;\r\n  \r\n    return <Navigate to=\"/login\" />;\r\n  };\r\n  \r\n  PrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n  };\r\n\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileTop = ({ profile: {\r\n    status,\r\n    company,\r\n    location,\r\n    website,\r\n    social,\r\n    user: { name, avatar }\r\n} }) => {\r\n    return (\r\n        <div className=\"profile-top bg-primary p-2\">\r\n          <img className=\"round-img my-1\" src={avatar} alt=\"\" />\r\n          <h1 className=\"large\">{name}</h1>\r\n          <p className=\"lead\">{status} {company && (<span>at {company}</span>)}</p>\r\n          <p>{location && (<span>{location}</span>)}</p>\r\n          <div className=\"icons my-1\">\r\n           {social ? (<Fragment>\r\n                {website !== null && (\r\n                    <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <i className=\"fas fa-globe fa-2x\"></i>\r\n                    </a>\r\n                )}\r\n                {social.twitter && (\r\n                    <a href={social.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <i className=\"fab fa-twitter fa-2x\"></i>\r\n                    </a>\r\n                )}\r\n                {social.facebook && (\r\n                    <a href={social.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <i className=\"fab fa-facebook fa-2x\"></i>\r\n                    </a>\r\n                )}\r\n                {social.linkedin && (\r\n                    <a href={social.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <i className=\"fab fa-linkedin fa-2x\"></i>\r\n                    </a>\r\n                )}\r\n                {social.youtube && (\r\n                    <a href={social.youtube} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <i className=\"fab fa-youtube fa-2x\"></i>\r\n                    </a>\r\n                )}\r\n                {social.instagram && (\r\n                    <a href={social.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <i className=\"fab fa-instagram fa-2x\"></i>\r\n                    </a>\r\n                )}\r\n           </Fragment>) : null}\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileTop.propTypes = {\r\n    profile: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ProfileTop;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileAbout = ({ profile: {\r\n    bio,\r\n    skills,\r\n    user: { name }\r\n}\r\n}) => {\r\n    return (\r\n        <div className=\"profile-about bg-light p-2\">\r\n          {bio && (\r\n            <Fragment>\r\n              <h2 className=\"text-primary\">{name.trim().split(' ')[0]} Bio</h2>\r\n              <p>\r\n                {bio}\r\n              </p>\r\n              <div className=\"line\"></div>\r\n            </Fragment>\r\n          )}\r\n          <h2 className=\"text-primary\">Skill Set</h2>\r\n          <div className=\"skills\">\r\n            {skills.map((skill, index) => (\r\n              <div key={index} className=\"p-1\">\r\n                <i className=\"fa fa-check\"></i> {skill}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileAbout.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default ProfileAbout;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport formatDate from '../../utils/formatDate'; \r\n\r\nconst ProfileExperience = ({ experience: { company, title, location, current, from, to, description }}) => \r\n            <div>\r\n                <h3 className='text-dark'>{company}</h3>\r\n                <p>{formatDate(from)} - {!to ? ' Now': formatDate(to)}</p>\r\n                <p><strong>Position: </strong>{title}</p>\r\n                <p>\r\n                    <strong>Description: </strong>\r\n                    {description}\r\n                </p>\r\n            </div>\r\n\r\nProfileExperience.propTypes = {\r\n    experience: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ProfileExperience\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport formatDate from '../../utils/formatDate';\r\n\r\nconst ProfileEducation = ({ education: { school, degree, fieldOfStudy, current, from, to, description }}) => \r\n            <div>\r\n                <h3 className='text-dark'>{school}</h3>\r\n                <p>{formatDate(from)} - {!to ? ' Now': formatDate(to)}</p>\r\n                <p><strong>Degree: </strong>{degree}</p>\r\n                <p><strong>Field Of Study: </strong>{fieldOfStudy}</p>\r\n                <p>\r\n                    <strong>Description: </strong>\r\n                    {description}\r\n                </p>\r\n            </div>\r\n\r\nProfileEducation.propTypes = {\r\n    education: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ProfileEducation;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../dashboard/Spinner';\r\nimport { getGithubRepos } from '../../actions/profile'\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n    useEffect(() => {\r\n        getGithubRepos(username);\r\n    }, [getGithubRepos, username]);\r\n    return (\r\n        <div className='profile-github'>\r\n            <h2 className='text-primary my-1'>\r\n                <i className='fab fa-github'></i> Github Repos\r\n            </h2>\r\n            {repos === null ? <Spinner /> : (\r\n                repos.map( repo => (\r\n                <div key={repo.id} className='repo bg-white p-1 my-1'>\r\n                    <div>\r\n                        <h4><a href={repo.html_url} target='_blank' rel='noopener noreferrer'>{repo.name}</a></h4>\r\n                        <p>\r\n                            {repo.description}\r\n                        </p>\r\n                    </div>\r\n                    <div>\r\n                        <ul>\r\n                            <li className='badge badge-primary'>\r\n                                Stars: {repo.stargazers_count}\r\n                            </li>\r\n                            <li className='badge badge-dark'>\r\n                                Watchers: {repo.watchers_count}\r\n                            </li>\r\n                            <li className='badge badge-light'>\r\n                                Forks: {repo.forks_count}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>))\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileGithub.propTypes = {\r\n    getGithubRepos: PropTypes.func.isRequired,\r\n    repos: PropTypes.array.isRequired,\r\n    username: PropTypes.string.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    repos: state.profile.repos\r\n})\r\n\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\r\n","import React, { useEffect, Fragment } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getProfileById } from '../../actions/profile';\r\nimport Spinner from '../dashboard/Spinner';\r\nimport ProfileTop from './ProfileTop';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileExperience from './ProfileExperience';\r\nimport ProfileEducation from './ProfileEducation';\r\nimport ProfileGithub from './ProfileGithub';\r\n\r\nconst Profile = ({ profile: { profile, loading }, auth, getProfileById  }) => {\r\n    const { id } = useParams();\r\n    useEffect(() => {\r\n        getProfileById(id);\r\n    }, [getProfileById, id])\r\n    return (\r\n        <section className=\"container\">\r\n            {profile === null || loading ? <Spinner /> : \r\n            (<Fragment>\r\n                <Link to=\"/profiles\" className=\"btn btn-light\">\r\n                    Go Back To Profiles\r\n                </Link>\r\n                {auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && (\r\n                    <Link to=\"/edit-profile\" className=\"btn btn-dark\">\r\n                        Edit Profile\r\n                    </Link>\r\n                )}\r\n                <div className=\"profile-grid my-1\">\r\n                    <ProfileTop profile={profile} />\r\n                    <ProfileAbout profile={profile} />\r\n                    <div className=\"profile-exp bg-white p-2\">\r\n                        <h2 className=\"text-primary\">Experience</h2>\r\n                        {profile.experiences.length > 0 ? (\r\n                            <Fragment>\r\n                                {profile.experiences.map( experience => (\r\n                                    <ProfileExperience key={experience._id} experience={experience} />\r\n                                ))}\r\n                            </Fragment>\r\n                        ) : (<h4>No experience credentials</h4>)}\r\n                    </div>\r\n\r\n                    <div className=\"profile-edu bg-white p-2\">\r\n                        <h2 className=\"text-primary\">Education</h2>\r\n                        {profile.education.length > 0 ? (\r\n                            <Fragment>\r\n                                {profile.education.map( edu => (\r\n                                    <ProfileEducation key={edu._id} education={edu} />\r\n                                ))}\r\n                            </Fragment>\r\n                        ) : (<h4>No education credentials</h4>)}\r\n                    </div>\r\n                    {profile.githubusername && <ProfileGithub username={profile.githubusername} />}\r\n                </div>\r\n            </Fragment>\r\n            )};\r\n        </section>\r\n    )\r\n}\r\n\r\nProfile.propTypes = {\r\n    getProfileById: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n","import React, { Fragment } from 'react'\r\n\r\nexport const NotFound = () => {\r\n    return (\r\n        <section className=\"container\">\r\n            <h1 className=\"x-large text-primary\">\r\n                <i className=\"fas fa-exclamation-triangle\" />\r\n                Page Not Found\r\n            </h1>\r\n            <p className=\"large\">Sorry, this page does not exist</p>\r\n        </section>\r\n    )\r\n}\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport NavBar from './components/layout/NavBar';\r\nimport Landing from './components/layout/Landing';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport { loadUser } from './actions/auth';\r\nimport './App.css';\r\nimport setAuthToken from './utils/setAuthToken';\r\nimport Login from './components/auth/Login';\r\nimport Register from './components/auth/Register';\r\nimport Alert from './components/layout/Alert';\r\nimport DashBoard from './components/dashboard/DashBoard';\r\nimport CreateProfile from './components/profile-forms/CreateProfile';\r\nimport AddExperience from './components/profile-forms/AddExperience';\r\nimport EditProfile from './components/profile-forms/EditProfile';\r\nimport AddEducation from './components/profile-forms/AddEducation';\r\nimport Experience from './components/dashboard/Experience';\r\nimport Education from './components/dashboard/Education';\r\nimport Profiles from './components/profiles/Profiles';\r\nimport Posts from './components/posts/Posts';\r\nimport Post from './components/post/Post';\r\nimport PrivateRoute from './components/routing/PrivateRoute';\r\nimport Profile from './components/profile/Profile';\r\nimport { NotFound } from './components/layout/NotFound';\r\n\r\nif (localStorage.token) {\r\n  setAuthToken(localStorage.token);\r\n}\r\nconst App = () => {\r\n  useEffect(() => {\r\n    store.dispatch(loadUser());\r\n  }, [])\r\n  return (\r\n    <Fragment>\r\n      <Provider store={store}>\r\n        <Router>\r\n          <NavBar />\r\n            <Alert />\r\n            <Routes>\r\n              <Route path=\"/\" element={<Landing />} />\r\n              <Route path=\"register\" element={<Register />} />\r\n              <Route path=\"login\" element={<Login />} />\r\n              <Route path=\"profiles\" element={<Profiles />} />\r\n              <Route path=\"profile/:id\" element={<Profile />} />\r\n              <Route path=\"dashboard\" element={<PrivateRoute component={DashBoard} />} />\r\n              <Route path=\"create-profile\" element={<PrivateRoute component={CreateProfile} />} />\r\n              <Route path=\"edit-profile\" element={<PrivateRoute component={EditProfile} />} /> \r\n              <Route path=\"add-experience\" element={<PrivateRoute component={AddExperience} />} />\r\n              <Route path=\"add-education\" element={<PrivateRoute component={AddEducation} />} />\r\n              <Route path=\"experience\" element={<PrivateRoute component={Experience} />} />\r\n              <Route path=\"education\" element={<PrivateRoute component={Education} />} />\r\n              <Route path=\"posts\" element={<PrivateRoute component={Posts} />} />\r\n              <Route path=\"posts/:id\" element={<PrivateRoute component={Post} />} />\r\n              <Route path=\"/*\" element={<NotFound />} />\r\n          </Routes>\r\n        </Router>\r\n      </Provider>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}